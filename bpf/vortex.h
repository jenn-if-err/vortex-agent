#ifndef __VORTEX_H
#define __VORTEX_H

enum {
    AF_INET = 2,
    AF_INET6 = 10,
};

enum {
    TYPE_FENTRY_SOCK_SENDMSG = 1,
    TYPE_FEXIT_SOCK_RECVMSG = 2,
    TYPE_FEXIT_TCP_SENDMSG = 3,
    TYPE_FEXIT_TCP_RECVMSG = 4,
    TYPE_FEXIT_UDP_SENDMSG = 5,
    TYPE_FEXIT_UDP_RECVMSG = 6,
    TYPE_TP_SYS_ENTER_SENDTO = 7,
    TYPE_UPROBE_SSL_WRITE = 8,
    TYPE_URETPROBE_SSL_WRITE = 9,
    TYPE_REPORT_WRITE_SOCKET_INFO = 10,
    TYPE_UPROBE_SSL_READ = 11,
    TYPE_URETPROBE_SSL_READ = 12,
    TYPE_REPORT_READ_SOCKET_INFO = 13,
    TYPE_ANY = 255,
};

enum {
    F_READ,
    F_WRITE,
};

#define EVENT_BUF_LEN 256
#define MAX_SNI_LEN 256

#define TGID_ENABLE_ALL 0xFFFFFFFF
#define CHUNKED_END_IDX 0xFFFFFFFF

#define ETH_P_IP 0x0800 /* Internet Protocol packet */

#define TLS_HANDSHAKE 0x16
#define TLS_CLIENT_HELLO 0x01
#define TLS_EXTENSION_SNI 0x0000

enum {
    VORTEX_NO_TRACE,
    VORTEX_TRACE,
};

enum {
    COMM_NO_TRACE_ALL,
    COMM_TRACE_ALL,
};

enum {
    BPF_CONTINUE_LOOP,
    BPF_END_LOOP,
};

enum {
    TC_ACT_UNSPEC = -1,
    TC_ACT_OK = 0,
    TC_ACT_RECLASSIFY = 1,
    TC_ACT_SHOT = 2,
    TC_ACT_PIPE = 3,
    TC_ACT_STOLEN = 4,
    TC_ACT_QUEUED = 5,
    TC_ACT_REPEAT = 6,
    TC_ACT_REDIRECT = 7,
};

enum {
    CG_SOCK_BLOCK = 0,
    CG_SOCK_ALLOW = 1,
};

#endif /* __VORTEX_H */
